{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./src/vis_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","field_group_variant","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelPivot","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","HeaderCell","cell_style","pivotData","id","join","colspan","rowspan","headerRow","concat","DataCell","html","links","rowid","colid","Row","sort","data","Column","transposed","idx","pos","levels","pivot_key","isVariance","variance_type","pivoted","isRowTotal","subtotal","subtotal_data","colspans","level","headerCell","header_setting","label_setting","useShortName","groupVarianceColumns","pivot_values","useViewName","headers","getHeaderCellLabel","headerData","header","pluginDefaults","dimensionLabels","dimensionHide","measureLabels","measureStyles","colorBy","groupBy","sizeBy","VisPluginModel","lookerData","queryResponse","visId","dimensions","measures","columns","ranges","pivot_fields","has_pivots","fields","supermeasure_like","has_supers","addPivots","addDimensions","addMeasures","buildRows","pivots","pivot","pivot_field","set","pivot_value","current_set","row_value","indexOf","dimension_like","dimension","dim","measure_like","measure","mea","pivotKey","columnId","level_sort_values","sort_values","supermeasure","lookerRow","current_min","current_max","all_dims","includeRowId","melt","jsonData","filter","valueRef","lookerId","lookerPivotKey","tipText","entries","entry","getConfigOptions","visModel","pluginSettings","baseOptions","newOptions","section","default","order","display_size","display","optionChoices","sizeByOptions","option","colorByOptions"],"mappings":"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","file":"vis_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.field_group_variant || queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = typeof queryResponseField.is_numeric !== 'undefined' ? queryResponseField.is_numeric : false\n    this.is_array = ['list', 'number_list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format ? queryResponseField.value_format : ''\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelPivot extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'pivot'    \n    this.align = 'center'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' ? queryResponseField.is_table_calculation : false\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = typeof queryResponseField.is_turtle !== 'undefined' ? queryResponseField.is_turtle : false\n    this.can_pivot = can_pivot\n  }\n}\n\nclass HeaderCell {\n  constructor({ column, type, label = null, align = '', cell_style = [], modelField = { name: '', label: '', view: '' }, pivotData = {} } = { column, type, label, align, cell_style, modelField, pivotData }) {\n    this.id = [column.id, type].join('.')\n    this.column = column\n    this.type = type\n    this.colspan = 1\n    this.rowspan = 1\n    this.headerRow = true\n    this.cell_style = ['headerCell'].concat(cell_style)\n    this.label = label\n\n    this.align = align ? align : this.column.modelField.is_numeric ? 'right' : 'left'\n\n    // if (column.vis.sortColsBy === 'pivots') {\n    //   if (type.startsWith 'pivot') {\n    //     this.align = 'center'\n    //   }\n    // } else {\n\n    // }\n\n    // if (this.column.modelField.type === 'dimension') {\n    //   if (type === 'pivot') {\n    //     this.align = 'right'\n    //   } else if (type === 'heading') {\n    //     this.align = 'center'\n    //   } else {\n    //     this.align = modelField.align || 'left'\n    //   }\n    // } else if (this.column.modelField.type === 'measure') {\n    //   if (type === 'field' && (column.vis.pivot_fields.length === 0 || column.vis.sortColsBy === 'getSortByPivots' )) {\n    //     this.align = modelField.align || 'right'\n    //   } else {\n    //     this.align = 'center'\n    //   }\n    // } else {\n    //   this.align = align\n    // }\n\n    this.modelField = modelField\n    this.pivotData = pivotData\n\n    if (modelField.type) { this.cell_style.push(modelField.type)}\n    if (modelField.is_table_calculation) { this.cell_style.push('calculation')}\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(...with_subtotals)\n      this.max_for_display = Math.max(...with_subtotals)\n      this.min = Math.min(...line_items_only)\n      this.max = Math.max(...line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  toString() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\nclass DataCell {\n  constructor({ value, rendered = null, html = null, links = [], cell_style = [], align = 'right', rowspan = 1, colspan = 1, rowid = '', colid = '' } = {})\n    {\n      this.value = value\n      this.rendered = rendered\n      this.html = html\n      this.links = links\n      this.cell_style = ['rowCell'].concat(cell_style)\n      this.align = align\n      this.rowspan = rowspan\n      this.colspan = colspan\n\n      this.colid = colid\n      this.rowid = rowid\n      this.id = colid && rowid ? [colid, rowid].join('.') : null\n\n      if (this.value === null && this.rendered !== '∞') {\n        this.rendered = '∅'\n      }\n    }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    // this.modelField = null\n    this.hide = false\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.isVariance = false\n    this.variance_type = null\n    this.pivoted = false\n    this.isRowTotal = false\n    this.super = false\n    this.subtotal = false\n    this.subtotal_data = {}\n    \n    this.series = null\n\n    this.sort = []\n    this.colspans = []\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getHeaderCellLabel (level) {\n    var headerCell = this.levels[level]\n\n    if (headerCell.label !== null) {\n      var label = headerCell.label\n    } else {\n      var label = headerCell.modelField.label\n      var header_setting = this.vis.config['heading|' + headerCell.modelField.name]\n      var label_setting = this.vis.config['label|' + headerCell.modelField.name]\n\n      if (headerCell.type === 'heading') {\n        if (typeof header_setting !== 'undefined') {\n          label = header_setting ? header_setting : headerCell.modelField.heading\n        } else {\n          label = headerCell.modelField.heading\n        }\n        return label\n      }\n\n      if (headerCell.type === 'field') {\n        label = this.vis.useShortName\n          ? headerCell.modelField.short_name || headerCell.modelField.label \n          : headerCell.modelField.label\n        \n        if (typeof label_setting !== 'undefined' && label_setting !== this.modelField.label) {\n          label = label_setting ? label_setting : label\n        }\n\n        if (this.isVariance) {\n          if (this.vis.groupVarianceColumns) {\n            if (this.vis.pivot_values.length === 2) {\n              label = this.variance_type === 'absolute' ? label + ' #' : label + ' %'\n            } else {\n              label = this.variance_type === 'absolute' ? label + ' Var #' : label + ' Var %'\n            }\n          } else {\n            label = this.variance_type === 'absolute' ? 'Var #' : 'Var %'\n          }\n        }\n    \n        if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n          label = [this.modelField.view, label].join(' ') \n        }\n      }\n\n      if (headerCell.type === 'pivot') {\n        if (this.isVariance && this.vis.groupVarianceColumns) {\n          if (this.vis.pivot_values.length === 2) {\n            label = 'Variance'\n          } else {\n            label = 'Var ' + label\n          }\n        }\n      }\n    }\n\n    return label\n  }\n\n  getHeaderCellLabelByType (type) {\n    for (var i = 0; i < this.vis.headers.length; i++) {\n      if (type === this.vis.headers[i].type) {\n        return this.getHeaderCellLabel(i)\n      }\n    }\n    return null\n  }\n\n  setHeaderCellLabels () {\n    this.levels.forEach((level, i) => {\n      level.label = level.label === null ? this.getHeaderCellLabel(i) : level.label\n    })\n  }\n\n  getHeaderData () {\n    var headerData = {}\n    this.modelField.vis.headers.forEach((header, i) => {\n      headerData[header.type] = this.levels[i]\n    })\n\n    return headerData\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelPivot = ModelPivot\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.HeaderCell = HeaderCell\nexports.DataCell = DataCell\nexports.Row = Row\nexports.Column = Column\n","import { newArray, ModelDimension, ModelMeasure, PivotField, Row, Column } from './vis_primitives'\n\nconst pluginDefaults = {\n  dimensionLabels: true,\n  dimensionHide: false,\n  measureLabels: true,\n  measureStyles: [],\n  colorBy: false,\n  groupBy: false,\n  sizeBy: false,\n}\n\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginModel {\n  /**\n   * Build the lookerData object\n   * @constructor\n   * \n   * 1. Check for pivots and supermeasures\n   * 2. Add dimensions, list of ids, list of full objects\n   * 3. Add measures, list of ids, list of full objects\n   * 4. Build rows\n   * \n   * @param {*} lookerData \n   * @param {*} config \n   * @param {*} queryResponse \n   */\n  constructor(lookerData, config, queryResponse) {\n    this.visId = 'vis_plugin'\n    this.config = config\n\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    \n\n    this.ranges = {}\n    \n    this.pivot_fields = []\n    this.pivot_values = []\n    this.has_pivots = false\n    \n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      this.has_supers = true\n    } else {\n      this.has_supers = false\n    }\n\n    this.addPivots(queryResponse)\n    this.addDimensions(queryResponse)\n    this.addMeasures(queryResponse)\n    this.buildRows(lookerData)\n  }\n\n  addPivots(queryResponse) {\n    if (typeof queryResponse.pivots !== 'undefined') {\n      queryResponse.fields.pivots.forEach(pivot => { \n        var pivot_field = new PivotField({\n          name: pivot.name,\n          label: pivot.label_short || pivot.label,\n          view: pivot.view_label || '',\n        })\n        this.pivot_fields.push(pivot_field) \n        this.ranges[pivot_field.name] = {set : []}\n      })\n      \n      this.pivot_values = queryResponse.pivots\n      this.ranges['lookerPivotKey'] = {set: []}\n\n      this.pivot_values.forEach(pivot_value => {\n        this.ranges['lookerPivotKey'].set.push(pivot_value.key)\n        \n        for (var key in pivot_value.data) {\n          var current_set = this.ranges[key].set\n          var row_value = pivot_value.data[key]\n          if (current_set.indexOf(row_value) === -1) {\n            current_set.push(row_value)\n          }\n        }\n      })\n      this.has_pivots = true\n    }\n  }\n\n  addDimensions(queryResponse) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var dim = new ModelDimension({\n        vis: this,\n        modelField: dimension\n      })\n      this.dimensions.push(dim)\n      this.ranges[dim.name] = {\n        set: [],\n      }\n\n      var column = new Column(dim.name, this, dim) \n      column.levels = newArray(queryResponse.fields.pivots.length, '') // populate empty levels when pivoted\n\n      this.columns.push(column)\n    })\n  }\n\n  addMeasures(queryResponse) {\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var mea = new ModelMeasure({\n        vis: this,\n        modelField: measure\n      })\n      this.measures.push(mea) \n      this.ranges[mea.name] = {\n        min: 100000000,\n        max: 0,\n      }\n    })\n    \n    // add measures, list of full objects\n    if (this.has_pivots) {\n      this.pivot_values.forEach(pivot_value => {\n        this.measures.length.forEach((measure, m) => {\n          var include_measure = (                                     // for pivoted measures, skip table calcs for row totals\n            pivot_value.key != '$$$_row_total_$$$'                    // if user wants a row total for table calc, must define separately\n          ) || (\n            pivot_value.key == '$$$_row_total_$$$' \n            && measure.is_table_calculation == false\n          )\n\n          if (include_measure) {\n            var pivotKey = pivot_value.key\n            var measureName = measure.name\n            var columnId = pivotKey + '.' + measureName\n\n            var levels = [] // will contain a list of all the pivot values for this column\n            var level_sort_values = []\n            this.pivot_fields.forEach(pivot => { \n              levels.push(pivot_value[pivot.name])\n              level_sort_values.push(pivot_value.sort_values[pivot.name]) \n            })\n\n            var column = new Column(columnId, this, measure)\n            column.levels = levels\n            column.pivoted = true\n            column.pivot_key = pivotKey\n\n            // TODO: Hide function\n\n            this.columns.push(column)\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, vis, measure)\n\n        this.columns.push(column)\n\n        if (typeof this.config['style|' + column.id] !== 'undefined') {\n          if (this.config['style|' + column.id] === 'hide') {\n            column.hide = true\n          }\n        }\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var mea = new ModelMeasure({\n          vis: this,\n          modelField: supermeasure\n        })\n        this.measures.push(mea) \n\n        var column = new Column(mea.name, this, mea)\n        column.levels = newArray(queryResponse.fields.pivots.length, '')\n        column.super = true\n\n        this.columns.push(column)\n      })\n    }\n  }\n\n  buildRows(lookerData) {\n    lookerData.forEach(lookerRow => {\n      var row = new Row() // TODO: consider creating the row object once all required field values identified\n      \n      this.columns.forEach(column => {\n        var name = column.modelField.name\n\n        // flatten data, if pivoted. Looker's data structure is nested for pivots (to a single level, no matter how many pivots)\n        if (column.pivoted) {\n          row.data[column.id] = lookerRow[name][column.pivot_key]\n        } else {\n          row.data[column.id] = lookerRow[column.id]\n        }\n\n        if (typeof row.data[column.id] !== 'undefined') {\n          if (column.modelField.type === 'measure') {\n            var current_min = this.ranges[name].min\n            var current_max = this.ranges[name].max\n            var row_value = row.data[column.id].value\n\n            this.ranges[name].min = Math.min(current_min, row_value)\n            this.ranges[name].max = Math.max(current_max, row_value)\n          } else if (column.modelField.type === 'dimension') {\n            var current_set = this.ranges[name].set\n            var row_value = row.data[column.id].value\n\n            if (current_set.indexOf(row_value) === -1) {\n              current_set.push(row_value)\n            }\n          }\n\n          if (typeof row.data[column.id].cell_style === 'undefined') {\n            row.data[column.id].cell_style = []\n          }\n        }\n      })\n\n      // set a unique id for the row\n      var all_dims = []\n      this.dimensions.forEach(dimension => {\n        all_dims.push(lookerRow[dimension.name].value)\n      })\n      row.id = all_dims.join('|')\n\n      this.data.push(row)\n    })\n  }\n\n  getDimensionByName(name) {\n    this.dimensions.forEach(d => {\n      if (d.name === name) {\n        return d\n      }\n    })\n  }\n\n  getMeasureByName(name) {\n    this.measures.forEach(m => {\n      if (m.name === name) {\n        return m\n      }\n    })\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * @param {boolean} includeRowId - adds a unique lookerId value to each row\n   * @param {boolean} melt - if dataset is pivoted, will 'melt' back to flat data\n   */\n  getJson(includeRowId=true, melt=false) {\n    var jsonData = []\n    if (!this.has_pivots || !melt) {\n      this.data.forEach(r => {\n        var row = {}\n        this.columns\n          .filter(c => !c.hide).forEach(c => {\n            row[c.id] = r.data[c.id].value\n          })\n        if (includeRowId) {\n          row.lookerId = r.id\n        }\n        jsonData.push(row)\n      })\n    } else {\n      this.pivot_values.forEach(p => {\n        this.data.forEach(r => {\n          var row = {}\n          for (var pivot_value in p.data) {\n            row[pivot_value] = p.data[pivot_value]\n          }\n          this.columns // 'flat fields' i.e. dimensions and supermeasures\n            .filter(c => !c.hide)\n            .filter(c => c.type === 'dimension' || c.super)\n            .forEach(c => {\n              row[c.id] = r.data[c.id].value\n            })\n          this.columns // 'pivoted fields' i.e. measures\n            .filter(c => !c.hide)\n            .filter(c => c.pivoted)\n            .forEach(c => {\n              var valueRef = p.key + '.' + c.modelField.name\n              row[c.modelField.name] = r.data[valueRef].value\n            })\n          if (includeRowId) {\n            row.lookerId = p.key + '|' + r.id\n          }\n          row.lookerPivotKey = p.key\n          jsonData.push(row)\n        })\n      })\n    }\n\n    return jsonData\n  }\n\n  getTooltipFromD3(d) {\n    var tipText = ''\n\n    Object.entries(d).forEach(entry => {\n      tipText += \"<p><em>\" + entry[0] + \":</em> \" + entry[1] + \"</p>\"\n    })\n    \n    return tipText;\n  }\n}\n\nconst getConfigOptions = (visModel, pluginSettings=pluginDefaults, baseOptions={}) => {\n  var pluginSettings = {...pluginDefaults, ...pluginSettings} \n  var newOptions = baseOptions\n\n  visModel.dimensions.forEach((dimension, i) => {\n    if (pluginSettings.dimensionLabels) {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n    }\n\n    if (pluginSettings.dimensionHide) {\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        order: i * 10 + 2,\n      }\n    }\n  })\n\n  visModel.measures.forEach((measure, i) => {\n    if (pluginSettings.measureLabels) {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label_short || measure.label,\n        default: measure.label_short || measure.label,\n        order: 100 + i * 10 + 1,\n      }\n    }\n\n    if (pluginSettings.measureStyles.length > 0) {\n      newOptions['style|' + visModel.measures[i].name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: optionChoices.measureStyles,\n        order: 100 + i * 10 + 2\n      }\n    }\n  })\n\n  if (pluginSettings.sizeBy) {\n    var sizeByOptions = [];\n    visModel.measures.forEach(measure => {\n        var option = {};\n        option[measure.label] = measure.name;\n        sizeByOptions.push(option);\n    })\n  \n    newOptions[\"sizeBy\"] = {\n        section: \" Visualization\",\n        type: \"string\",\n        label: \"Size By\",\n        display: \"select\",\n        values: sizeByOptions,\n        default: \"0\",\n        order: 300,\n    }\n  }\n\n  // colorByOptions include:\n  // - by dimension\n  // - by pivot key (which are also dimensions)\n  // - by pivot series (one color per column)\n  var colorByOptions = [];\n  visModel.dimensions.forEach(dimension => {\n      var option = {};\n      option[dimension.label] = dimension.name;\n      colorByOptions.push(option)\n  })\n\n  visModel.pivot_fields.forEach(pivot_field => {\n    var option = {};\n    option[pivot_field.label] = pivot_field.name;\n    colorByOptions.push(option)\n  })\n\n  if (visModel.pivot_fields.length > 1 ) {\n    colorByOptions.push({'Pivot Series': 'lookerPivotKey'})\n  }\n  \n  if (pluginSettings.colorBy) {\n    newOptions[\"colorBy\"] = {\n      section: \" Visualization\",\n      type: \"string\",\n      label: \"Color By\",\n      display: \"select\",\n      values: colorByOptions,\n      default: \"0\",\n      order: 100,\n    } \n  }\n\n  if (pluginSettings.groupBy) {\n    newOptions[\"groupBy\"] = {\n      section: \" Visualization\",\n      type: \"string\",\n      label: \"Group By\",\n      display: \"select\",\n      values: colorByOptions,\n      default: \"0\",\n      order: 200,\n    } \n  }\n\n  return newOptions\n}\n\nexports.VisPluginModel = VisPluginModel\nexports.getConfigOptions = getConfigOptions\n"],"sourceRoot":""}